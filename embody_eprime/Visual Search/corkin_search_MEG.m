function corkin_search_MEG(sbj_id,list_id)%sbj = 'test'%list_id =-2  ;% DMS Experiment (October 2001)% Last modified: 2/09 (Julien - added MEG Daq routines)% Last modified: 11/09 (Paymon - adapted Julien's code for a new experiment)%% function theData = corkin_search_MEG(listName)% listName -%% Press the escape ('esc') or number pad asterisk ("*") keys during probe stimuli to exit presentation.%% corkin_rules_task exits with 0 for a complete run, -1 on error,% and returns the number of trials completed for incomplete runs.%% Written for Mac OS 10 using Psychophysics Toolbox v3%try    clear Screen;    AssertOpenGL;    %**********************************************************************    %    % CHANGE THE FOLLOWING VARIABLES TO REFLECT YOUR TESTING ENVIRONMENT!    %    % Set triggerDevice to presentation laptop keyboard (usually 6 with    % 1208FS plugged in, but check with psychHIDtest). That way you can    % exit stimuli presentation.    triggerDevice = 7;    % debug: Set true to turn on verbose messages in console. May be    % slightly detrimental to performance, I'm not sure if it matters.    debug = false;    % PMD-1208FS/DAQ Data conditions: correspond to bits 1-4 on 1208FS box.    % 1-8 are search conditions    % 9 is null    % 10 is fixation    % 11 is mask    fixCondition = 10;    maskCondition = 11;    %**********************************************************************    % Other variables: shouldn't change unless you are making major changes    % to the task/stimuli presentation    startDir = pwd;    triggerIndexMAX = 5;    % Cue/stimuli image extension    fmt = 'png';    % Cue/stimuli image path    stimuli_path = '/stimuli/';    %% INITIALIZE PMD-1208FS FOR MEG    %--------------------------------------------------------------------------    di=initPMD1208FS();    if (isnumeric(di) && di < 0)        fprintf(1,'** Not sending output; PMD-1208FS Device not found. **\n');        fastDaqDout = inline('','di','port','data');    else        if (debug); fprintf('PMD-1208FS Device found; Initializing for output...\n'); end;        DaqDConfigPort(di,0,0);        fastDaqDout = inline('PsychHID(''SetReport'', di, 2, hex2dec(''04''), uint8([0 port data]))', 'di', 'port', 'data');    end    % Turn off annoying Psychophysics splash when loading    Screen('Preference', 'VisualDebugLevel', 0);    if (debug); fprintf('Working directory: %s\n', startDir); end;    % Detect multiple monitors: will use highest numbered monitor for    % stimuli presentation (i.e., external if present).    screens = Screen('Screens');    if (debug); fprintf('%d screen(s) detected...', screens + 1); end;    screenNumber = max(screens);    if (debug); fprintf('using screen #%d\n', screenNumber + 1); end;    if (debug); fprintf('Attempting to open window on screen #%d...', screenNumber + 1); end;    window = Screen(screenNumber, 'OpenWindow', 0, [], 32, 2);    if (debug); fprintf('\n...window successfully opened [%d].\n\n', window); end;    WaitSecs(2);    HideCursor;    ifi=Screen('GetFlipInterval', window);    half_ifi = ifi/2;    Screen('TextFont',window, 'Helvetica');    Screen('TextSize',window, 42);    % Determine screen dimensions in order to center stimuli/probe images    screenRect = Screen('Rect', window);    xPos1 = (screenRect(3)/2);    yPos1 = (screenRect(4)/2);    %**********************************************************************    %    % Experiment Parameters and calculations    %    %Trial	Condition	location	time_cue	time_mask    switch list_id        case 1            trial_list = [1,9,-1,2,0;2,2,4,2,0.5;3,2,1,2,0.5;4,2,3,2,0.5;5,3,10,2,0.5;6,9,-1,2,0;7,1,3,2,0.5;8,9,-1,2,0;9,2,1,2,0.5;10,1,2,2,0.5;11,3,3,2,0.5;12,9,-1,6,0;13,3,7,2,0.5;14,9,-1,8,0;15,2,1,2,0.5;16,9,-1,4,0;17,4,3,2,0.5;18,3,6,2,0.5;19,4,3,2,0.5;20,9,-1,4,0;21,1,4,2,0.5;22,9,-1,2,0;23,1,3,2,0.5;24,9,-1,4,0;25,4,6,2,0.5;26,9,-1,2,0;27,4,5,2,0.5;28,9,-1,8,0;29,4,3,2,0.5;30,1,4,2,0.5;31,1,2,2,0.5;32,9,-1,4,0;33,4,2,2,0.5;34,2,2,2,0.5;35,9,-1,2,0;36,2,2,2,0.5;37,9,-1,2,0;38,4,2,2,0.5;39,9,-1,4,0;40,3,10,2,0.5;41,9,-1,6,0;42,2,3,2,0.5;43,9,-1,4,0;44,2,4,2,0.5;45,1,4,2,0.5;46,3,6,2,0.5;47,9,-1,2,0;48,4,8,2,0.5;49,4,10,2,0.5;50,9,-1,6,0;51,2,1,2,0.5;52,4,1,2,0.5;53,3,3,2,0.5;54,9,-1,4,0;55,3,9,2,0.5;56,9,-1,6,0;57,2,2,2,0.5;58,4,8,2,0.5;59,9,-1,4,0;60,3,5,2,0.5;61,1,2,2,0.5;62,9,-1,4,0;63,1,3,2,0.5;64,2,4,2,0.5;65,9,-1,4,0;66,1,1,2,0.5;67,9,-1,2,0;68,3,1,2,0.5;69,3,1,2,0.5;70,9,-1,2,0;71,1,1,2,0.5;72,9,-1,4,0;73,2,2,2,0.5;74,9,-1,6,0;75,4,5,2,0.5;76,9,-1,2,0;77,1,4,2,0.5;78,1,3,2,0.5;79,4,2,2,0.5;80,3,2,2,0.5;81,9,-1,6,0;82,4,4,2,0.5;83,9,-1,2,0;84,3,2,2,0.5;85,9,-1,4,0;86,1,2,2,0.5;87,3,4,2,0.5;88,2,3,2,0.5;89,1,3,2,0.5;90,9,-1,2,0;91,3,6,2,0.5;92,9,-1,4,0;93,4,8,2,0.5;94,2,4,2,0.5;95,9,-1,6,0;96,1,3,2,0.5;97,2,2,2,0.5;98,9,-1,6,0;99,3,5,2,0.5;100,9,-1,4,0;101,4,8,2,0.5;];            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case 2            trial_list = [1,9,-1,2,0;2,2,3,2,0.5;3,9,-1,2,0;4,3,10,2,0.5;5,3,4,2,0.5;6,1,3,2,0.5;7,9,-1,4,0;8,1,4,2,0.5;9,3,5,2,0.5;10,9,-1,2,0;11,1,1,2,0.5;12,9,-1,6,0;13,4,3,2,0.5;14,9,-1,2,0;15,2,2,2,0.5;16,9,-1,4,0;17,1,2,2,0.5;18,2,4,2,0.5;19,9,-1,2,0;20,2,2,2,0.5;21,9,-1,4,0;22,2,3,2,0.5;23,9,-1,2,0;24,4,5,2,0.5;25,9,-1,6,0;26,1,3,2,0.5;27,9,-1,4,0;28,2,2,2,0.5;29,9,-1,2,0;30,4,9,2,0.5;31,4,5,2,0.5;32,1,1,2,0.5;33,9,-1,2,0;34,3,8,2,0.5;35,9,-1,4,0;36,1,3,2,0.5;37,9,-1,2,0;38,2,4,2,0.5;39,9,-1,4,0;40,1,4,2,0.5;41,9,-1,6,0;42,1,3,2,0.5;43,4,10,2,0.5;44,9,-1,2,0;45,2,3,2,0.5;46,9,-1,6,0;47,2,4,2,0.5;48,1,2,2,0.5;49,9,-1,4,0;50,3,4,2,0.5;51,9,-1,6,0;52,1,3,2,0.5;53,4,7,2,0.5;54,2,1,2,0.5;55,1,4,2,0.5;56,4,4,2,0.5;57,9,-1,4,0;58,3,6,2,0.5;59,9,-1,2,0;60,1,1,2,0.5;61,9,-1,8,0;62,2,3,2,0.5;63,3,9,2,0.5;64,4,3,2,0.5;65,9,-1,4,0;66,3,7,2,0.5;67,9,-1,2,0;68,1,1,2,0.5;69,4,2,2,0.5;70,3,8,2,0.5;71,9,-1,4,0;72,4,7,2,0.5;73,3,3,2,0.5;74,2,4,2,0.5;75,9,-1,4,0;76,4,10,2,0.5;77,9,-1,8,0;78,1,3,2,0.5;79,9,-1,2,0;80,4,5,2,0.5;81,3,7,2,0.5;82,4,7,2,0.5;83,1,4,2,0.5;84,9,-1,4,0;85,3,8,2,0.5;86,3,3,2,0.5;87,9,-1,6,0;88,2,3,2,0.5;89,4,9,2,0.5;90,9,-1,2,0;91,4,1,2,0.5;92,2,1,2,0.5;93,4,7,2,0.5;94,9,-1,2,0;95,3,1,2,0.5;96,9,-1,4,0;97,2,3,2,0.5;98,3,6,2,0.5;99,9,-1,2,0;100,2,4,2,0.5;101,9,-1,4,0;102,3,4,2,0.5;103,9,-1,6,0;];            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case 3            trial_list = [1,9,-1,2,0;2,4,5,2,0.5;3,3,6,2,0.5;4,4,10,2,0.5;5,4,9,2,0.5;6,1,1,2,0.5;7,3,3,2,0.5;8,9,-1,4,0;9,2,3,2,0.5;10,4,7,2,0.5;11,2,1,2,0.5;12,2,3,2,0.5;13,9,-1,4,0;14,3,1,2,0.5;15,9,-1,2,0;16,1,4,2,0.5;17,9,-1,2,0;18,3,1,2,0.5;19,9,-1,2,0;20,2,2,2,0.5;21,4,9,2,0.5;22,9,-1,8,0;23,2,4,2,0.5;24,9,-1,8,0;25,3,7,2,0.5;26,2,2,2,0.5;27,2,3,2,0.5;28,9,-1,2,0;29,4,10,2,0.5;30,9,-1,8,0;31,4,2,2,0.5;32,9,-1,2,0;33,4,6,2,0.5;34,9,-1,2,0;35,3,8,2,0.5;36,9,-1,2,0;37,1,3,2,0.5;38,9,-1,6,0;39,1,4,2,0.5;40,1,4,2,0.5;41,9,-1,4,0;42,2,2,2,0.5;43,9,-1,6,0;44,1,4,2,0.5;45,9,-1,4,0;46,1,1,2,0.5;47,9,-1,2,0;48,2,1,2,0.5;49,9,-1,8,0;50,2,2,2,0.5;51,3,3,2,0.5;52,3,2,2,0.5;53,2,2,2,0.5;54,9,-1,4,0;55,4,9,2,0.5;56,1,3,2,0.5;57,9,-1,6,0;58,3,1,2,0.5;59,9,-1,2,0;60,4,5,2,0.5;61,9,-1,2,0;62,1,3,2,0.5;63,9,-1,4,0;64,1,4,2,0.5;65,4,8,2,0.5;66,3,7,2,0.5;67,9,-1,4,0;68,1,1,2,0.5;69,9,-1,4,0;70,3,6,2,0.5;71,2,1,2,0.5;72,4,7,2,0.5;73,9,-1,2,0;74,4,2,2,0.5;75,2,4,2,0.5;76,9,-1,2,0;77,4,2,2,0.5;78,9,-1,2,0;79,1,4,2,0.5;80,9,-1,4,0;81,4,8,2,0.5;82,9,-1,2,0;83,3,6,2,0.5;84,9,-1,2,0;85,2,3,2,0.5;86,9,-1,2,0;87,3,10,2,0.5;88,9,-1,8,0;89,2,4,2,0.5;90,1,1,2,0.5;91,2,4,2,0.5;92,9,-1,2,0;93,4,9,2,0.5;94,9,-1,2,0;95,3,9,2,0.5;96,9,-1,4,0;97,1,4,2,0.5;98,9,-1,6,0;99,3,3,2,0.5;100,3,5,2,0.5;101,1,1,2,0.5;102,1,4,2,0.5;103,9,-1,4,0;];            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case 4            trial_list = [1,9,-1,2,0;2,2,1,2,0.5;3,1,2,2,0.5;4,3,2,2,0.5;5,9,-1,2,0;6,2,1,2,0.5;7,9,-1,2,0;8,2,2,2,0.5;9,9,-1,8,0;10,1,1,2,0.5;11,9,-1,4,0;12,3,3,2,0.5;13,3,4,2,0.5;14,4,2,2,0.5;15,3,5,2,0.5;16,1,1,2,0.5;17,9,-1,6,0;18,4,9,2,0.5;19,9,-1,8,0;20,3,6,2,0.5;21,9,-1,2,0;22,2,3,2,0.5;23,2,3,2,0.5;24,9,-1,6,0;25,3,5,2,0.5;26,1,4,2,0.5;27,4,4,2,0.5;28,3,9,2,0.5;29,9,-1,6,0;30,2,2,2,0.5;31,9,-1,2,0;32,3,7,2,0.5;33,9,-1,2,0;34,2,1,2,0.5;35,4,8,2,0.5;36,2,3,2,0.5;37,3,3,2,0.5;38,9,-1,4,0;39,4,1,2,0.5;40,9,-1,6,0;41,2,3,2,0.5;42,9,-1,6,0;43,1,2,2,0.5;44,1,2,2,0.5;45,9,-1,2,0;46,2,4,2,0.5;47,9,-1,4,0;48,4,2,2,0.5;49,9,-1,2,0;50,4,5,2,0.5;51,9,-1,6,0;52,1,3,2,0.5;53,9,-1,2,0;54,4,5,2,0.5;55,2,3,2,0.5;56,9,-1,2,0;57,4,9,2,0.5;58,9,-1,6,0;59,3,9,2,0.5;60,1,2,2,0.5;61,9,-1,8,0;62,3,8,2,0.5;63,9,-1,4,0;64,1,3,2,0.5;65,4,8,2,0.5;66,1,4,2,0.5;67,1,4,2,0.5;68,9,-1,6,0;69,4,7,2,0.5;70,9,-1,2,0;71,1,1,2,0.5;72,3,9,2,0.5;73,4,2,2,0.5;74,4,3,2,0.5;75,9,-1,2,0;76,2,2,2,0.5;77,3,10,2,0.5;78,9,-1,4,0;79,1,2,2,0.5;80,9,-1,2,0;81,2,3,2,0.5;82,9,-1,4,0;83,4,10,2,0.5;84,4,9,2,0.5;85,4,6,2,0.5;86,3,3,2,0.5;87,9,-1,2,0;88,2,2,2,0.5;89,9,-1,6,0;90,1,4,2,0.5;91,9,-1,2,0;92,1,3,2,0.5;93,9,-1,6,0;94,2,4,2,0.5;95,3,7,2,0.5;96,3,1,2,0.5;97,9,-1,4,0;98,1,2,2,0.5;99,2,3,2,0.5;100,9,-1,4,0;];            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case 5            trial_list = [1,9,-1,2,0;2,2,4,2,0.5;3,4,9,2,0.5;4,9,-1,2,0;5,3,4,2,0.5;6,4,5,2,0.5;7,9,-1,2,0;8,3,9,2,0.5;9,4,6,2,0.5;10,9,-1,8,0;11,1,2,2,0.5;12,9,-1,2,0;13,3,7,2,0.5;14,2,1,2,0.5;15,9,-1,4,0;16,2,2,2,0.5;17,1,3,2,0.5;18,2,4,2,0.5;19,3,2,2,0.5;20,9,-1,6,0;21,2,1,2,0.5;22,9,-1,2,0;23,2,4,2,0.5;24,9,-1,4,0;25,1,4,2,0.5;26,9,-1,4,0;27,1,1,2,0.5;28,9,-1,2,0;29,3,8,2,0.5;30,1,2,2,0.5;31,9,-1,4,0;32,4,7,2,0.5;33,9,-1,4,0;34,1,4,2,0.5;35,4,10,2,0.5;36,4,3,2,0.5;37,2,3,2,0.5;38,9,-1,6,0;39,2,2,2,0.5;40,9,-1,6,0;41,4,6,2,0.5;42,3,7,2,0.5;43,9,-1,6,0;44,3,6,2,0.5;45,1,2,2,0.5;46,4,4,2,0.5;47,2,2,2,0.5;48,4,1,2,0.5;49,3,2,2,0.5;50,9,-1,4,0;51,2,3,2,0.5;52,9,-1,8,0;53,1,1,2,0.5;54,4,9,2,0.5;55,9,-1,8,0;56,4,3,2,0.5;57,4,2,2,0.5;58,1,1,2,0.5;59,9,-1,2,0;60,4,7,2,0.5;61,9,-1,2,0;62,3,9,2,0.5;63,3,3,2,0.5;64,9,-1,2,0;65,2,1,2,0.5;66,9,-1,2,0;67,2,4,2,0.5;68,9,-1,6,0;69,1,4,2,0.5;70,4,3,2,0.5;71,9,-1,8,0;72,2,3,2,0.5;73,1,1,2,0.5;74,9,-1,4,0;75,1,3,2,0.5;76,1,3,2,0.5;77,9,-1,8,0;78,3,4,2,0.5;79,3,1,2,0.5;80,9,-1,2,0;81,3,6,2,0.5;82,9,-1,8,0;83,2,2,2,0.5;84,3,10,2,0.5;85,9,-1,2,0;86,1,4,2,0.5;87,1,3,2,0.5;88,2,1,2,0.5;89,9,-1,2,0;90,4,8,2,0.5;91,9,-1,2,0;92,1,2,2,0.5;93,9,-1,6,0;94,3,3,2,0.5;95,9,-1,2,0;96,4,4,2,0.5;97,2,3,2,0.5;98,3,10,2,0.5;99,9,-1,4,0;];            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case 6            trial_list = [1,9,-1,2,0;2,4,6,2,0.5;3,4,3,2,0.5;4,3,9,2,0.5;5,2,4,2,0.5;6,9,-1,6,0;7,2,3,2,0.5;8,2,3,2,0.5;9,4,6,2,0.5;10,1,4,2,0.5;11,3,9,2,0.5;12,1,2,2,0.5;13,3,7,2,0.5;14,9,-1,2,0;15,3,6,2,0.5;16,9,-1,6,0;17,3,9,2,0.5;18,9,-1,2,0;19,2,4,2,0.5;20,9,-1,2,0;21,2,4,2,0.5;22,4,7,2,0.5;23,9,-1,8,0;24,1,3,2,0.5;25,9,-1,2,0;26,4,9,2,0.5;27,9,-1,6,0;28,2,2,2,0.5;29,3,10,2,0.5;30,2,4,2,0.5;31,1,3,2,0.5;32,9,-1,4,0;33,3,2,2,0.5;34,2,1,2,0.5;35,9,-1,2,0;36,3,2,2,0.5;37,4,4,2,0.5;38,9,-1,4,0;39,1,3,2,0.5;40,9,-1,6,0;41,1,1,2,0.5;42,9,-1,4,0;43,4,6,2,0.5;44,3,1,2,0.5;45,1,3,2,0.5;46,9,-1,4,0;47,2,1,2,0.5;48,2,4,2,0.5;49,9,-1,6,0;50,3,5,2,0.5;51,9,-1,6,0;52,2,3,2,0.5;53,3,4,2,0.5;54,9,-1,2,0;55,3,7,2,0.5;56,1,1,2,0.5;57,9,-1,8,0;58,1,2,2,0.5;59,9,-1,6,0;60,2,3,2,0.5;61,9,-1,4,0;62,3,6,2,0.5;63,4,3,2,0.5;64,9,-1,8,0;65,1,4,2,0.5;66,1,1,2,0.5;67,4,2,2,0.5;68,9,-1,4,0;69,1,2,2,0.5;70,4,7,2,0.5;71,9,-1,4,0;72,3,5,2,0.5;73,3,10,2,0.5;74,9,-1,4,0;75,1,3,2,0.5;76,1,2,2,0.5;77,1,3,2,0.5;78,9,-1,4,0;79,4,4,2,0.5;80,2,4,2,0.5;81,2,3,2,0.5;82,9,-1,2,0;83,2,1,2,0.5;84,9,-1,6,0;85,1,1,2,0.5;86,9,-1,2,0;87,3,1,2,0.5;88,2,2,2,0.5;89,4,10,2,0.5;90,9,-1,6,0;91,4,4,2,0.5;92,9,-1,2,0;93,4,5,2,0.5;94,9,-1,6,0;95,4,9,2,0.5;96,4,5,2,0.5;97,9,-1,6,0;];            finalInstructionText = 'Is there a ''X''? \n\n\n\n\n<-YES    NO->';                                case 7            trial_list = [1,9,-1,2,0;2,7,2,2,0.5;3,8,10,2,0.5;4,5,2,2,0.5;5,7,10,2,0.5;6,9,-1,4,0;7,8,3,2,0.5;8,5,1,2,0.5;9,8,9,2,0.5;10,9,-1,4,0;11,8,5,2,0.5;12,9,-1,2,0;13,8,5,2,0.5;14,9,-1,4,0;15,6,4,2,0.5;16,9,-1,2,0;17,6,3,2,0.5;18,9,-1,8,0;19,7,1,2,0.5;20,6,2,2,0.5;21,5,3,2,0.5;22,8,6,2,0.5;23,9,-1,2,0;24,6,1,2,0.5;25,5,1,2,0.5;26,9,-1,6,0;27,7,2,2,0.5;28,7,2,2,0.5;29,6,4,2,0.5;30,9,-1,4,0;31,5,3,2,0.5;32,9,-1,2,0;33,7,3,2,0.5;34,9,-1,2,0;35,5,4,2,0.5;36,7,4,2,0.5;37,7,8,2,0.5;38,9,-1,2,0;39,5,1,2,0.5;40,9,-1,4,0;41,6,1,2,0.5;42,6,1,2,0.5;43,9,-1,2,0;44,7,1,2,0.5;45,7,7,2,0.5;46,6,3,2,0.5;47,9,-1,8,0;48,6,4,2,0.5;49,9,-1,2,0;50,6,4,2,0.5;51,5,2,2,0.5;52,9,-1,2,0;53,6,3,2,0.5;54,9,-1,6,0;55,8,7,2,0.5;56,5,1,2,0.5;57,9,-1,6,0;58,6,1,2,0.5;59,8,3,2,0.5;60,6,4,2,0.5;61,6,4,2,0.5;62,9,-1,8,0;63,7,7,2,0.5;64,5,3,2,0.5;65,9,-1,6,0;66,8,6,2,0.5;67,7,10,2,0.5;68,8,3,2,0.5;69,8,8,2,0.5;70,9,-1,4,0;71,5,4,2,0.5;72,9,-1,4,0;73,6,3,2,0.5;74,9,-1,8,0;75,5,2,2,0.5;76,8,9,2,0.5;77,9,-1,2,0;78,5,4,2,0.5;79,9,-1,6,0;80,5,1,2,0.5;81,9,-1,4,0;82,6,4,2,0.5;83,7,7,2,0.5;84,8,3,2,0.5;85,9,-1,2,0;86,7,6,2,0.5;87,9,-1,4,0;88,7,4,2,0.5;89,9,-1,6,0;90,5,3,2,0.5;91,9,-1,6,0;92,5,2,2,0.5;93,8,6,2,0.5;94,8,8,2,0.5;95,8,1,2,0.5;96,9,-1,4,0;97,7,2,2,0.5;98,9,-1,8,0;];            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case 8            trial_list = [1,9,-1,2,0;2,7,2,2,0.5;3,8,7,2,0.5;4,9,-1,4,0;5,6,3,2,0.5;6,7,2,2,0.5;7,9,-1,2,0;8,7,4,2,0.5;9,8,3,2,0.5;10,9,-1,2,0;11,6,1,2,0.5;12,6,2,2,0.5;13,9,-1,2,0;14,8,3,2,0.5;15,9,-1,8,0;16,8,2,2,0.5;17,9,-1,2,0;18,6,4,2,0.5;19,8,10,2,0.5;20,5,4,2,0.5;21,5,2,2,0.5;22,9,-1,2,0;23,6,2,2,0.5;24,9,-1,4,0;25,8,9,2,0.5;26,8,8,2,0.5;27,5,3,2,0.5;28,5,4,2,0.5;29,8,10,2,0.5;30,9,-1,8,0;31,7,10,2,0.5;32,7,6,2,0.5;33,9,-1,6,0;34,8,2,2,0.5;35,7,3,2,0.5;36,9,-1,4,0;37,6,4,2,0.5;38,7,3,2,0.5;39,9,-1,8,0;40,6,4,2,0.5;41,8,4,2,0.5;42,9,-1,4,0;43,8,9,2,0.5;44,5,2,2,0.5;45,9,-1,6,0;46,7,9,2,0.5;47,5,4,2,0.5;48,9,-1,4,0;49,5,4,2,0.5;50,8,3,2,0.5;51,6,1,2,0.5;52,9,-1,2,0;53,7,10,2,0.5;54,9,-1,4,0;55,8,8,2,0.5;56,7,7,2,0.5;57,9,-1,4,0;58,6,1,2,0.5;59,9,-1,4,0;60,7,6,2,0.5;61,9,-1,2,0;62,6,4,2,0.5;63,6,1,2,0.5;64,7,1,2,0.5;65,9,-1,8,0;66,7,6,2,0.5;67,5,3,2,0.5;68,9,-1,8,0;69,5,4,2,0.5;70,7,1,2,0.5;71,6,1,2,0.5;72,9,-1,4,0;73,8,7,2,0.5;74,9,-1,6,0;75,8,4,2,0.5;76,9,-1,4,0;77,5,1,2,0.5;78,5,2,2,0.5;79,5,2,2,0.5;80,8,1,2,0.5;81,9,-1,2,0;82,5,3,2,0.5;83,9,-1,8,0;84,7,1,2,0.5;85,5,1,2,0.5;86,9,-1,6,0;87,6,2,2,0.5;88,5,2,2,0.5;89,6,3,2,0.5;90,6,4,2,0.5;91,9,-1,8,0;92,5,4,2,0.5;93,9,-1,4,0;94,7,7,2,0.5;95,9,-1,4,0;96,6,2,2,0.5;];            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case 9            trial_list = [1,9,-1,2,0;2,7,5,2,0.5;3,9,-1,2,0;4,7,7,2,0.5;5,8,10,2,0.5;6,9,-1,2,0;7,5,2,2,0.5;8,7,7,2,0.5;9,9,-1,4,0;10,5,3,2,0.5;11,6,3,2,0.5;12,6,4,2,0.5;13,9,-1,4,0;14,5,4,2,0.5;15,5,2,2,0.5;16,9,-1,2,0;17,7,6,2,0.5;18,6,3,2,0.5;19,9,-1,6,0;20,5,1,2,0.5;21,6,1,2,0.5;22,5,2,2,0.5;23,9,-1,8,0;24,5,4,2,0.5;25,9,-1,2,0;26,8,6,2,0.5;27,9,-1,2,0;28,7,10,2,0.5;29,6,2,2,0.5;30,8,1,2,0.5;31,5,2,2,0.5;32,9,-1,4,0;33,7,6,2,0.5;34,9,-1,4,0;35,8,4,2,0.5;36,8,6,2,0.5;37,6,3,2,0.5;38,9,-1,6,0;39,8,9,2,0.5;40,9,-1,2,0;41,7,9,2,0.5;42,9,-1,2,0;43,6,2,2,0.5;44,7,2,2,0.5;45,8,3,2,0.5;46,6,1,2,0.5;47,9,-1,6,0;48,8,9,2,0.5;49,9,-1,6,0;50,7,10,2,0.5;51,9,-1,4,0;52,8,4,2,0.5;53,9,-1,2,0;54,8,7,2,0.5;55,9,-1,4,0;56,5,3,2,0.5;57,5,4,2,0.5;58,9,-1,4,0;59,7,2,2,0.5;60,7,7,2,0.5;61,6,1,2,0.5;62,9,-1,4,0;63,5,1,2,0.5;64,5,3,2,0.5;65,9,-1,2,0;66,6,4,2,0.5;67,5,3,2,0.5;68,6,1,2,0.5;69,9,-1,4,0;70,6,3,2,0.5;71,9,-1,4,0;72,7,7,2,0.5;73,9,-1,2,0;74,7,3,2,0.5;75,9,-1,8,0;76,8,8,2,0.5;77,8,8,2,0.5;78,5,4,2,0.5;79,9,-1,4,0;80,6,1,2,0.5;81,9,-1,2,0;82,8,8,2,0.5;83,9,-1,4,0;84,7,4,2,0.5;85,9,-1,6,0;86,8,5,2,0.5;87,6,2,2,0.5;88,8,5,2,0.5;89,9,-1,2,0;90,5,3,2,0.5;91,9,-1,6,0;92,6,4,2,0.5;93,9,-1,2,0;94,7,6,2,0.5;95,7,9,2,0.5;96,8,6,2,0.5;97,9,-1,2,0;98,6,4,2,0.5;99,9,-1,2,0;100,5,3,2,0.5;101,9,-1,14,0;];            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case 10            trial_list = [1,9,-1,2,0;2,6,1,2,0.5;3,9,-1,2,0;4,5,2,2,0.5;5,9,-1,8,0;6,5,3,2,0.5;7,9,-1,2,0;8,5,1,2,0.5;9,9,-1,2,0;10,5,4,2,0.5;11,9,-1,2,0;12,8,7,2,0.5;13,9,-1,4,0;14,6,2,2,0.5;15,7,2,2,0.5;16,6,1,2,0.5;17,9,-1,4,0;18,7,5,2,0.5;19,6,4,2,0.5;20,5,4,2,0.5;21,6,3,2,0.5;22,9,-1,2,0;23,7,5,2,0.5;24,6,1,2,0.5;25,6,3,2,0.5;26,9,-1,2,0;27,5,3,2,0.5;28,8,3,2,0.5;29,7,8,2,0.5;30,9,-1,4,0;31,8,6,2,0.5;32,8,10,2,0.5;33,9,-1,6,0;34,6,2,2,0.5;35,5,4,2,0.5;36,7,7,2,0.5;37,7,3,2,0.5;38,6,4,2,0.5;39,6,1,2,0.5;40,8,8,2,0.5;41,9,-1,2,0;42,6,2,2,0.5;43,9,-1,6,0;44,5,1,2,0.5;45,7,5,2,0.5;46,9,-1,8,0;47,5,1,2,0.5;48,9,-1,2,0;49,7,2,2,0.5;50,8,5,2,0.5;51,9,-1,8,0;52,7,6,2,0.5;53,9,-1,2,0;54,8,8,2,0.5;55,9,-1,4,0;56,5,4,2,0.5;57,9,-1,4,0;58,8,3,2,0.5;59,9,-1,2,0;60,8,5,2,0.5;61,9,-1,2,0;62,6,4,2,0.5;63,7,10,2,0.5;64,7,9,2,0.5;65,7,7,2,0.5;66,9,-1,2,0;67,8,10,2,0.5;68,9,-1,2,0;69,6,3,2,0.5;70,5,2,2,0.5;71,9,-1,4,0;72,6,3,2,0.5;73,9,-1,8,0;74,7,8,2,0.5;75,9,-1,4,0;76,7,7,2,0.5;77,9,-1,6,0;78,5,3,2,0.5;79,5,4,2,0.5;80,6,4,2,0.5;81,9,-1,2,0;82,8,8,2,0.5;83,5,3,2,0.5;84,8,6,2,0.5;85,6,4,2,0.5;86,7,2,2,0.5;87,9,-1,4,0;88,5,2,2,0.5;89,9,-1,8,0;90,8,5,2,0.5;91,8,5,2,0.5;92,5,3,2,0.5;93,9,-1,6,0;94,8,1,2,0.5;95,9,-1,4,0;96,8,9,2,0.5;97,9,-1,2,0;98,7,5,2,0.5;99,9,-1,14,0;];            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case 11            trial_list = [1,9,-1,2,0;2,8,3,2,0.5;3,7,4,2,0.5;4,9,-1,2,0;5,5,2,2,0.5;6,9,-1,4,0;7,6,2,2,0.5;8,9,-1,4,0;9,5,3,2,0.5;10,5,2,2,0.5;11,7,2,2,0.5;12,8,9,2,0.5;13,9,-1,8,0;14,7,6,2,0.5;15,5,3,2,0.5;16,9,-1,2,0;17,5,4,2,0.5;18,9,-1,4,0;19,8,10,2,0.5;20,5,1,2,0.5;21,9,-1,8,0;22,7,4,2,0.5;23,7,2,2,0.5;24,9,-1,4,0;25,6,2,2,0.5;26,9,-1,2,0;27,6,4,2,0.5;28,9,-1,6,0;29,6,2,2,0.5;30,6,3,2,0.5;31,8,8,2,0.5;32,6,4,2,0.5;33,9,-1,4,0;34,7,8,2,0.5;35,8,2,2,0.5;36,9,-1,2,0;37,8,5,2,0.5;38,6,3,2,0.5;39,5,1,2,0.5;40,9,-1,2,0;41,6,4,2,0.5;42,9,-1,6,0;43,7,2,2,0.5;44,8,3,2,0.5;45,9,-1,2,0;46,7,2,2,0.5;47,8,8,2,0.5;48,9,-1,2,0;49,7,10,2,0.5;50,9,-1,4,0;51,7,5,2,0.5;52,9,-1,6,0;53,5,2,2,0.5;54,5,4,2,0.5;55,9,-1,6,0;56,8,2,2,0.5;57,8,5,2,0.5;58,9,-1,8,0;59,8,7,2,0.5;60,9,-1,2,0;61,6,1,2,0.5;62,6,1,2,0.5;63,9,-1,2,0;64,5,4,2,0.5;65,7,2,2,0.5;66,8,9,2,0.5;67,9,-1,8,0;68,6,1,2,0.5;69,9,-1,6,0;70,8,7,2,0.5;71,5,3,2,0.5;72,9,-1,4,0;73,8,3,2,0.5;74,9,-1,2,0;75,5,3,2,0.5;76,6,3,2,0.5;77,8,7,2,0.5;78,9,-1,2,0;79,6,2,2,0.5;80,9,-1,4,0;81,5,2,2,0.5;82,9,-1,2,0;83,7,2,2,0.5;84,7,3,2,0.5;85,9,-1,4,0;86,7,6,2,0.5;87,9,-1,4,0;88,6,3,2,0.5;89,9,-1,2,0;90,8,3,2,0.5;91,9,-1,4,0;92,7,5,2,0.5;93,6,1,2,0.5;94,9,-1,2,0;95,5,2,2,0.5;96,5,3,2,0.5;97,9,-1,2,0;98,6,4,2,0.5;99,9,-1,2,0;100,5,4,2,0.5;101,7,3,2,0.5;102,9,-1,6,0;];            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case 12            trial_list = [1,9,-1,2,0;2,8,8,2,0.5;3,7,10,2,0.5;4,9,-1,2,0;5,5,4,2,0.5;6,6,4,2,0.5;7,5,1,2,0.5;8,9,-1,4,0;9,6,1,2,0.5;10,7,9,2,0.5;11,5,2,2,0.5;12,9,-1,4,0;13,6,3,2,0.5;14,9,-1,8,0;15,6,1,2,0.5;16,5,4,2,0.5;17,6,3,2,0.5;18,5,2,2,0.5;19,7,4,2,0.5;20,9,-1,8,0;21,5,3,2,0.5;22,5,2,2,0.5;23,9,-1,4,0;24,8,1,2,0.5;25,9,-1,6,0;26,7,2,2,0.5;27,9,-1,8,0;28,7,5,2,0.5;29,9,-1,4,0;30,8,10,2,0.5;31,9,-1,4,0;32,7,2,2,0.5;33,9,-1,2,0;34,6,2,2,0.5;35,9,-1,2,0;36,6,4,2,0.5;37,5,3,2,0.5;38,8,5,2,0.5;39,5,2,2,0.5;40,6,2,2,0.5;41,9,-1,4,0;42,8,1,2,0.5;43,9,-1,4,0;44,8,6,2,0.5;45,8,4,2,0.5;46,6,2,2,0.5;47,6,4,2,0.5;48,9,-1,8,0;49,7,9,2,0.5;50,9,-1,6,0;51,7,5,2,0.5;52,8,1,2,0.5;53,5,1,2,0.5;54,9,-1,6,0;55,5,3,2,0.5;56,9,-1,4,0;57,7,4,2,0.5;58,7,6,2,0.5;59,7,5,2,0.5;60,8,5,2,0.5;61,9,-1,2,0;62,6,3,2,0.5;63,7,2,2,0.5;64,9,-1,2,0;65,5,1,2,0.5;66,9,-1,4,0;67,5,1,2,0.5;68,9,-1,2,0;69,6,1,2,0.5;70,8,1,2,0.5;71,9,-1,4,0;72,8,6,2,0.5;73,9,-1,8,0;74,8,5,2,0.5;75,9,-1,2,0;76,5,3,2,0.5;77,9,-1,2,0;78,5,1,2,0.5;79,9,-1,2,0;80,7,4,2,0.5;81,6,2,2,0.5;82,6,1,2,0.5;83,8,6,2,0.5;84,9,-1,2,0;85,7,4,2,0.5;86,9,-1,2,0;87,7,10,2,0.5;88,8,1,2,0.5;89,9,-1,6,0;90,6,3,2,0.5;91,8,2,2,0.5;92,9,-1,8,0;93,7,1,2,0.5;94,8,9,2,0.5;95,6,3,2,0.5;96,9,-1,6,0;97,5,1,2,0.5;98,9,-1,4,0;] ;            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';                                %practice cases are negative                case -1 % short pratice            trial_list = [1,9,-1,1,0;2,2,-1,1.5,0.5;3,9,-1,1,0;4,3,4,1.5,0.5;5,9,-1,1,0;6,4,-1,1.5,0.5;7,9,-1,1,0;8,1,2,1.5,0.5;9,9,-1,1,0;10,4,-1,1.5,0.5;11,9,-1,1,0;12,1,3,1.5,0.5;13,9,-1,1,0;14,2,-1,1.5,0.5;15,9,-1,1,0;16,3,1,1.5,0.5;];            instructionText ='In this task, you will see a series of letters in a circle on the screen.  In this part of the experiment, your job is to determine whether or not there is an "X" present.  Indicate your response using the left or right arrow keys--left for YES and right for NO.  The keys are labeled on the keyboard.  It is important that you keep your eyes focused  on the red dot in the center of the screen.  Do not move your eyes around to look at the letters.  Do you have any questions?  Now we will start with a few practice trials.';            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case -2 % short pratice            trial_list = [1,9,-1,1,0;2,6,-1,1.5,0.5;3,9,-1,1,0;4,7,3,1.5,0.5;5,9,-1,1,0;6,8,-1,1.5,0.5;7,9,-1,1,0;8,5,1,1.5,0.5;9,9,-1,1,0;10,8,-1,1.5,0.5;11,9,-1,1,0;12,5,2,1.5,0.5;13,9,-1,1,0;14,6,-1,1.5,0.5;15,9,-1,1,0;16,7,4,1.5,0.5;];            instructionText ='In this task, you will see a series of letters in a circle on the screen.  In this part of the experiment, your job is to determine whether or not there is a "T" present.  Indicate your response using the left or right arrow keys--left for YES and right for NO.  The keys are labeled on the keyboard.  It is important that you keep your eyes focused  on the red dot in the center of the screen.  Do not move your eyes around to look at the letters.  Do you have any questions?  Now we will start with a few practice trials.';            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';        case -3 % 40 trials            trial_list = [1,9,-1,1,0;2,3,2,1.5,0.5;3,9,-1,1,0;4,1,4,1.5,0.5;5,9,-1,1,0;6,4,-1,1.5,0.5;7,9,-1,1,0;8,2,-1,1.5,0.5;9,9,-1,1,0;10,1,2,1.5,0.5;11,9,-1,1,0;12,3,10,1.5,0.5;13,9,-1,1,0;14,3,3,1.5,0.5;15,9,-1,1,0;16,4,-1,1.5,0.5;17,9,-1,1,0;18,4,-1,1.5,0.5;19,9,-1,1,0;20,2,-1,1.5,0.5;21,9,-1,1,0;22,1,3,1.5,0.5;23,9,-1,1,0;24,2,-1,1.5,0.5;25,9,-1,1,0;26,4,-1,1.5,0.5;27,9,-1,1,0;28,1,4,1.5,0.5;29,9,-1,1,0;30,3,7,1.5,0.5;31,9,-1,1,0;32,4,-1,1.5,0.5;33,9,-1,1,0;34,1,1,1.5,0.5;35,9,-1,1,0;36,2,-1,1.5,0.5;37,9,-1,1,0;38,2,-1,1.5,0.5;39,9,-1,1,0;40,3,8,1.5,0.5;];            instructionText ='In this task, you will see a series of letters in a circle on the screen.  In this part of the experiment, your job is to determine whether or not there is an "X" present.  Indicate your response using the left or right arrow keys--left for YES and right for NO.  The keys are labeled on the keyboard.  It is important that you keep your eyes focused  on the red dot in the center of the screen.  Do not move your eyes around to look at the letters.  Do you have any questions?  Now we will start with the experiment. ';            finalInstructionText = 'Is there an ''X''? \n\n\n\n\n<-YES    NO->';        case -4 % 40 trials            trial_list = [1,9,-1,1,0;2,7,6,1.5,0.5;3,9,-1,1,0;4,5,4,1.5,0.5;5,9,-1,1,0;6,8,-1,1.5,0.5;7,9,-1,1,0;8,6,-1,1.5,0.5;9,9,-1,1,0;10,5,2,1.5,0.5;11,9,-1,1,0;12,7,2,1.5,0.5;13,9,-1,1,0;14,7,8,1.5,0.5;15,9,-1,1,0;16,8,-1,1.5,0.5;17,9,-1,1,0;18,8,-1,1.5,0.5;19,9,-1,1,0;20,6,-1,1.5,0.5;21,9,-1,1,0;22,5,3,1.5,0.5;23,9,-1,1,0;24,6,-1,1.5,0.5;25,9,-1,1,0;26,8,-1,1.5,0.5;27,9,-1,1,0;28,5,4,1.5,0.5;29,9,-1,1,0;30,7,9,1.5,0.5;31,9,-1,1,0;32,8,-1,1.5,0.5;33,9,-1,1,0;34,5,1,1.5,0.5;35,9,-1,1,0;36,6,-1,1.5,0.5;37,9,-1,1,0;38,6,-1,1.5,0.5;39,9,-1,1,0;40,7,3,1.5,0.5;];            instructionText ='In this task, you will see a series of letters in a circle on the screen.  In this part of the experiment, your job is to determine whether or not there is a "T" present.  Indicate your response using the left or right arrow keys--left for YES and right for NO.  The keys are labeled on the keyboard.  It is important that you keep your eyes focused  on the red dot in the center of the screen.  Do not move your eyes around to look at the letters.  Do you have any questions?  Now we will start the experiment.';            finalInstructionText = 'Is there a ''T''? \n\n\n\n\n<-YES    NO->';                otherwise            error('unknown list id');    end        white = 128;        %white luminance. set to 128 for meg because projector is very bright. set to 255 otherwise.    Key_probe_Present = 80;    Key_probe_Absent  = 79;    stimRadious     = 80;    outlineRadious  = 160;    stim_dt         = 1;    %numbers of seconds the stimulus should be on screen    mon_width       = 39;   % horizontal dimension of viewable screen (cm)    v_dist          = 60;   % viewing distance (cm)    fix_width       = 8;    % width of fixation point (pixels)    fix_color       = [white 0 0 ]; %color of fixation point    fix_dt          = 1.5;    %fixation appears "fix_dt" number of seconds before stimulus onset    noise_dt        = .500;   %duration of mask presentation, sec    ppd = pi * (screenRect(3)-screenRect(1)) / atan(mon_width/v_dist/2) / 360;    % pixels per degree    fix_rect          = CenterRect(SetRect(0,0,fix_width,fix_width),screenRect);    stim_10Angles = 0:2*pi/10:(2*pi-2*pi/10);    stim_4Angles = 0:2*pi/4:(2*pi-2*pi/4);    stim_10_X_Location = xPos1 + outlineRadious .* cos(stim_10Angles);    stim_10_Y_Location = yPos1 + outlineRadious .* sin(stim_10Angles);    stim_4_X_Location = xPos1 + outlineRadious .* cos(stim_4Angles);    stim_4_Y_Location = yPos1 + outlineRadious .* sin(stim_4Angles);    stim_10_boxes = zeros(10,4);    stim_4_boxes = zeros(4,4);    for i=1:10        stim_10_boxes(i,:) = [stim_10_X_Location(i)-stimRadious/2 stim_10_Y_Location(i)-stimRadious/2 stim_10_X_Location(i)+stimRadious/2 stim_10_Y_Location(i)+stimRadious/2];    end    for i=1:4        stim_4_boxes(i,:) = [stim_4_X_Location(i)-stimRadious/2 stim_4_Y_Location(i)-stimRadious/2 stim_4_X_Location(i)+stimRadious/2 stim_4_Y_Location(i)+stimRadious/2];    end    % Convert png files to textures for presentation    if (debug); fprintf('Loading presentation images...\n'); end;    L_textureList = zeros(4, 1);    X_textureList = zeros(4, 1);    T_textureList = zeros(4, 1);    j=1;    for i = 45:90:315        imageFileName = ['./search_stimuli/L_' num2str(i) '.png'];        X=imread(imageFileName, fmt);        X(X<110)=0;        X(X>110)=white;        L_textureList(j, 1) = Screen('MakeTexture', window, X);        if (debug); fprintf('L Texture created from %s\n', imageFileName); end;        imageFileName = ['./search_stimuli/T_' num2str(i) '.png'];        X=imread(imageFileName, fmt);        X(X<110)=0;        X(X>110)=white;        T_textureList(j, 1) = Screen('MakeTexture', window, X);        if (debug); fprintf('T Texture created from %s\n', imageFileName); end;        imageFileName = ['./search_stimuli/X_' num2str(i) '.png'];        X=imread(imageFileName, fmt);        X(X<110)=0;        X(X>110)=white;        X_textureList(j, 1) = Screen('MakeTexture', window, X);        if (debug); fprintf('X Texture created from %s\n', imageFileName); end;        j=j+1;    end        X=imread('./search_stimuli/FIXATION.jpg', 'jpg');    X(X<110)=0;    X(X>110)=white;    cross_texture = Screen('MakeTexture', window , X);    % make the mask texture    noise=white*rand(512,512);    R_o=outlineRadious+stimRadious/2;    R_i=outlineRadious-stimRadious/2;    for i=1:512        for j=1:512            if (sqrt((i-256)^2+(j-256)^2)>R_o || sqrt((i-256)^2+(j-256)^2)<R_i)                noise(i,j)=0;            end        end    end    noise_texture = Screen('MakeTexture', window , noise);    %conditions: N trials.    %    %     1: N/8; 4  letters ; 3 L, 1 X    %     2: N/8; 4  letters ; 4 L    %     3: N/8; 10 letters ; 9 L, 1 X    %     4: N/8; 10 letters ; 10 L    %    %     5: N/8; 4  letters ; 3 L, 1 T    %     6: N/8; 4  letters ; 4 L    %     7: N/8; 10 letters ; 9 L, 1 T    %     8: N/8; 10 letters ; 10 L    %     9: null    %    trial_letter_orientations=zeros(size(trial_list,1),10);    trial_texture_list=zeros(size(trial_list,1),10);    for i=1:size(trial_list,1)        this_texture_list=[];        switch trial_list(i,2)            case 1 %     1: N/8; 4  letters ; 3 L, 1 X                tmp=[];tmp = randsample(4,4)';                trial_letter_orientations(i,1:4) = tmp(randperm(length(tmp)));                trial_texture_list(i,trial_list(i,3)) = X_textureList(trial_letter_orientations(i,1));                indx = 1:4;                indx(indx==trial_list(i,3))=[];                trial_texture_list(i,indx) = L_textureList(trial_letter_orientations(i,2:4));            case 2 %     2: N/8; 4  letters ; 4 L                tmp=[];tmp = randsample(4,4)';                trial_letter_orientations(i,1:4) = tmp(randperm(length(tmp)));                trial_texture_list(i,1:4) = L_textureList(trial_letter_orientations(i,1:4));            case 3 %     3: N/8; 10 letters ; 9 L, 1 X                tmp=[];tmp = [randsample(4,4)' randsample(4,4)' randsample(4,2)' ];                trial_letter_orientations(i,1:10) = tmp(randperm(length(tmp)));                trial_texture_list(i,trial_list(i,3))=X_textureList(trial_letter_orientations(i,1));                indx = 1:10;                indx(indx==trial_list(i,3))=[];                trial_texture_list(i,indx) = L_textureList(trial_letter_orientations(i,2:10));            case 4 %     4: N/8; 10 letters ; 10 L                tmp=[];tmp = [randsample(4,4)' randsample(4,4)' randsample(4,2)' ];                trial_letter_orientations(i,1:10) = tmp(randperm(length(tmp)));                trial_texture_list(i,1:10) = L_textureList(trial_letter_orientations(i,1:10));            case 5 %     5: N/8; 4  letters ; 3 L, 1 T                tmp=[];tmp = randsample(4,4)';                trial_letter_orientations(i,1:4) = tmp(randperm(length(tmp)));                trial_texture_list(i,trial_list(i,3)) = T_textureList(trial_letter_orientations(i,1));                indx = 1:4;                indx(indx==trial_list(i,3))=[];                trial_texture_list(i,indx) = L_textureList(trial_letter_orientations(i,2:4));            case 6 %     6: N/8; 4  letters ; 4 L                tmp=[];tmp = randsample(4,4)';                trial_letter_orientations(i,1:4) = tmp(randperm(length(tmp)));                trial_texture_list(i,1:4) = L_textureList(trial_letter_orientations(i,1:4));            case 7 %     7: N/8; 10 letters ; 9 L, 1 T                tmp=[];tmp = [randsample(4,4)' randsample(4,4)' randsample(4,2)' ];                trial_letter_orientations(i,1:10) = tmp(randperm(length(tmp)));                trial_texture_list(i,trial_list(i,3))=T_textureList(trial_letter_orientations(i,1));                indx = 1:10;                indx(indx==trial_list(i,3))=[];                trial_texture_list(i,indx) = L_textureList(trial_letter_orientations(i,2:10));            case 8 %     8: N/8; 10 letters ; 10 L                tmp=[];tmp = [randsample(4,4)' randsample(4,4)' randsample(4,2)' ];                trial_letter_orientations(i,1:10) = tmp(randperm(length(tmp)));                trial_texture_list(i,1:10) = L_textureList(trial_letter_orientations(i,1:10));            otherwise%null condition                trial_letter_orientations(i,1:10) = zeros(1,10);                trial_texture_list(i,1:10) = zeros(1,10);        end    end    all_response_err = zeros(size(trial_list,1),6);    triggerInfo = zeros(size(trial_list,1),6);    NtotalTrials = size(trial_list,1);    %    % END Experiment Parameters and calculations    %    %**********************************************************************    priorityLevel=MaxPriority(window);    Priority(priorityLevel);    if (debug); fprintf('Polling input devices...'); end;    devices = PsychHID('Devices');    deviceNumber = max(size(devices));    if (debug); fprintf('%i devices found.\n', deviceNumber); end;    % ---= Show instruction =---    if(list_id<0)%for practice, show the initial instruction screen        [nx, ny] = DrawFormattedText(window, instructionText,'center','center', white,60,[],[],1.5);    else        [nx, ny] = DrawFormattedText(window, finalInstructionText,'center','center', white,60,[],[],1.5);    end    Screen('Flip',window);    % Presentation ready, wait for keypress ("+" or "=") to start.    % Use keyboard "Esc" or "*" to exit early at this point.    if (debug); fprintf('Experiment loaded, ready to begin...'); end;    while 1        [keyIsDown, secs, keyCode] = KbCheck(triggerDevice);        if keyCode(85) || keyCode(41)            error('Script termination before experiment start.');        end        if keyCode(87) || keyCode(46)            break;        end    end    %*****************************    % ---== EXPERIMENT START ==---    %*****************************    % ---= Start experiment =---    %if (debug); fprintf('...experiment started!\n'); end;	%disp('  | trial RT accuracy key');	    Screen('DrawTexture', window, cross_texture)    fastDaqDout(di, 0, 0);    vblTime = Screen('Flip', window);    fastDaqDout(di, 0, fixCondition);    experimentStart = GetSecs;    for trial = 1 : NtotalTrials        trialStart = vblTime;        if (trial_list(trial,2) == 9);			triggerInfo(trial,6) = GetSecs - experimentStart;			% ---= NULL Condition =---			triggerInfo(trial,1) = (vblTime - trialStart);            %Screen('FillRect',window,0);            while ((GetSecs - vblTime) < (trial_list(trial,4)- ifi))                [keyIsDown, secs, keyCode] = KbCheck(triggerDevice);                if (keyCode(41) || keyCode(85))                    error('ESC was pressed.')                end            end	% while            if(trial == NtotalTrials)            else                if(trial_list(trial+1,2) == 9)                    Screen('DrawTexture', window, cross_texture);                    fastDaqDout(di, 0, 0);                    vblTime = Screen('Flip', window);					fastDaqDout(di, 0, trial_list(trial+1,2));                else                    Screen('FillRect', window, fix_color, fix_rect);                    fastDaqDout(di, 0, 0);                    vblTime = Screen('Flip', window);					fastDaqDout(di, 0, fixCondition);                end            end            triggerInfo(trial,2) = (vblTime - trialStart);        else			triggerInfo(trial,6) = GetSecs - experimentStart;            % ---= EXPERIMENTAL Condition =---			            triggerInfo(trial,1) = (vblTime - trialStart);            switch trial_list(trial,2)                case 1                    Screen('DrawTextures', window, trial_texture_list(trial,1:4),[],stim_4_boxes');                case 2                    Screen('DrawTextures', window, trial_texture_list(trial,1:4),[],stim_4_boxes');                case 5                    Screen('DrawTextures', window, trial_texture_list(trial,1:4),[],stim_4_boxes');                case 6                    Screen('DrawTextures', window, trial_texture_list(trial,1:4),[],stim_4_boxes');                otherwise                Screen('DrawTextures', window, trial_texture_list(trial,1:10),[],stim_10_boxes');            end			            Screen('FillRect', window, fix_color, fix_rect);            fastDaqDout(di, 0, 0);            vblTime = Screen('Flip', window, vblTime + fix_dt - half_ifi);            fastDaqDout(di, 0, trial_list(trial,2));            triggerInfo(trial,2) = (vblTime - trialStart);            Screen('DrawTexture', window,noise_texture);            Screen('FillRect', window, fix_color, fix_rect);            fastDaqDout(di, 0, 0);            vblTime = Screen('Flip', window, vblTime + trial_list(trial,4) - half_ifi);            fastDaqDout(di, 0, maskCondition);            triggerInfo(trial,3) = (vblTime - trialStart);			            if(trial == NtotalTrials)            else                if(trial_list(trial+1,2) == 9)                    Screen('DrawTexture', window, cross_texture);                    fastDaqDout(di, 0, 0);                    vblTime = Screen('Flip', window, vblTime + trial_list(trial,5) - half_ifi);					fastDaqDout(di, 0, trial_list(trial+1,2));                else                    Screen('FillRect', window, fix_color, fix_rect);                    fastDaqDout(di, 0, 0);                    vblTime = Screen('Flip', window, vblTime + trial_list(trial,5) - half_ifi);					fastDaqDout(di, 0, fixCondition);                end            end            triggerInfo(trial,4) = (vblTime - trialStart);			disp(['  | ' num2str([trial_list(trial,:)  triggerInfo(trial,4) triggerInfo(trial,6) ])]);        end    end % for (every trial)    %***************************    % ---== EXPERIMENT END ==---    %***************************    Priority(0);    WaitSecs(2);    experimentEnd = GetSecs;    experimentDuration = experimentEnd - experimentStart;    ShowCursor;    file_name = ['./data/corkin_meg_search_sbj_' sbj_id '_list_' num2str(list_id) '_date_' strrep(strrep(datestr(now),':','-'),' ','-') '_.mat'];    save(file_name); % save everything    disp(file_name);    if (debug)        fprintf('Experiment Finished: Total Time = [%.2f]\n', experimentDuration);    end    Screen('CloseAll');catch    file_name = ['./data/crashed_meg_corkin_search_sbj_' sbj_id '_list_' num2str(list_id) '_date_' strrep(strrep(datestr(now),':','-'),' ','-') '_.mat'];    save(file_name); % save everything    % ---= ERROR SHUTDOWN & CLEANUP =---    Screen('CloseAll');    theerror=lasterror;    theerror.stack(:)    ShowCursor;    Priority(0);    rethrow(lasterror);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%